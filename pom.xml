<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.bolingcavalry</groupId>
    <artifactId>hellojib</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>hellojib</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--使用jib插件-->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>1.3.0</version>
                <configuration>
                    <!--from节点用来设置镜像的基础镜像，相当于Docerkfile中的FROM关键字-->
                    <from>
                        <!--使用openjdk官方镜像，tag是8-jdk-stretch，表示镜像的操作系统是debian9,装好了jdk8-->
<!--                        <image>openjdk:8-jdk-stretch</image>-->
                        <image>openjdk:16-slim-buster</image>
                    </from>
                    <to>
                        <!--镜像名称和tag，使用了mvn内置变量${project.version}，表示当前工程的version-->
<!--                        <image>106.55.159.119:80/harbor/${project.name}</image>-->
                        <image>registry.cn-hangzhou.aliyuncs.com/cheh/maven</image>
                        <tags>
                            <tag>latest</tag>
<!--                            <tag>1.0.0-SNAPSHOT</tag>-->
                        </tags>
<!--                        <auth>-->
<!--                            <username>admin</username>-->
<!--                            <password>Harbor12345</password>-->
<!--                        </auth>                   -->
                        <auth>
                            <username>huanzi车欢</username>
                            <password>qq473843959</password>
                        </auth>
                    </to>
                    <!--容器相关的属性-->
                    <container>
                        <!--todo 没有执行权限   https://my.oschina.net/go4it/blog/1941693  -->
                        <!--启用容器的命令(类似于Docker的entrypoint 设置后jvmFlags 和 mainClass将被忽略 )-->
<!--                        <entrypoint>-->
<!--                            <shell>/bin/sh</shell>-->
<!--                            <option>-c</option>-->
<!--                            <arg>/entrypoint.sh</arg>-->
<!--                        </entrypoint>-->

                        <!--jvm内存参数-->
                        <jvmFlags>
                            <jvmFlag>-Xms4g</jvmFlag>
                            <jvmFlag>-Xmx4g</jvmFlag>
                        </jvmFlags>

                        <!--要暴露的端口-->
                        <ports>
                            <port>8080</port>
                        </ports>
                        <environment>
                            <SPRING_OUTPUT_ANSI_ENABLED>ALWAYS</SPRING_OUTPUT_ANSI_ENABLED>
                        </environment>
                        <useCurrentTimestamp>true</useCurrentTimestamp>
                    </container>
                    <allowInsecureRegistries>true</allowInsecureRegistries>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
